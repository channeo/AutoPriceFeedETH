/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { AutoPriceFeed, AutoPriceFeedInterface } from "../../AutoPriceFeed.sol/AutoPriceFeed.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "int256",
        "name": "newPrice",
        "type": "int256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "PriceUpdated",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newOwner",
        "type": "address"
      }
    ],
    "name": "changeOwner",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ethPrice",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ethPrices",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getETHPrice",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "isDataFresh",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "lastUpdate",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "int256",
        "name": "_newPrice",
        "type": "int256"
      }
    ],
    "name": "updateETHPrice",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550642e90edd0005f81905550426001819055506107ab8061006e5f395ff3fe608060405234801561000f575f5ffd5b5060043610610086575f3560e01c8063c64d5ec211610059578063c64d5ec214610100578063c7be5fb41461011c578063d38988fc1461013a578063ff186b2e1461015857610086565b80638da5cb5b1461008a578063a607a8d9146100a8578063a6f9dae1146100c6578063c0463711146100e2575b5f5ffd5b610092610176565b60405161009f919061044a565b60405180910390f35b6100b061019b565b6040516100bd919061047b565b60405180910390f35b6100e060048036038101906100db91906104c2565b6101f4565b005b6100ea6102c6565b6040516100f79190610505565b60405180910390f35b61011a60048036038101906101159190610548565b6102cc565b005b6101246103e6565b604051610131919061047b565b60405180910390f35b6101426103ee565b60405161014f919061058d565b60405180910390f35b610160610406565b60405161016d919061047b565b60405180910390f35b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610e10600154426101ad91906105d3565b106101ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610660565b60405180910390fd5b5f54905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a906106c8565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610352906106c8565b60405180910390fd5b5f811361039d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039490610730565b60405180910390fd5b805f81905550426001819055507fdb6fb3cf4cc5fb760bcd63b958a53b2396776dff32c063188e864296541e76bd81426040516103db92919061074e565b60405180910390a150565b5f5f54905090565b5f610e106001544261040091906105d3565b10905090565b5f5481565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104348261040b565b9050919050565b6104448161042a565b82525050565b5f60208201905061045d5f83018461043b565b92915050565b5f819050919050565b61047581610463565b82525050565b5f60208201905061048e5f83018461046c565b92915050565b5f5ffd5b6104a18161042a565b81146104ab575f5ffd5b50565b5f813590506104bc81610498565b92915050565b5f602082840312156104d7576104d6610494565b5b5f6104e4848285016104ae565b91505092915050565b5f819050919050565b6104ff816104ed565b82525050565b5f6020820190506105185f8301846104f6565b92915050565b61052781610463565b8114610531575f5ffd5b50565b5f813590506105428161051e565b92915050565b5f6020828403121561055d5761055c610494565b5b5f61056a84828501610534565b91505092915050565b5f8115159050919050565b61058781610573565b82525050565b5f6020820190506105a05f83018461057e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6105dd826104ed565b91506105e8836104ed565b9250828203905081811115610600576105ff6105a6565b5b92915050565b5f82825260208201905092915050565b7f4475206c696575206375000000000000000000000000000000000000000000005f82015250565b5f61064a600a83610606565b915061065582610616565b602082019050919050565b5f6020820190508181035f8301526106778161063e565b9050919050565b7f436869206f776e6572206d6f692064756f6320757064617465000000000000005f82015250565b5f6106b2601983610606565b91506106bd8261067e565b602082019050919050565b5f6020820190508181035f8301526106df816106a6565b9050919050565b7f476961206b686f6e6720686f70206c65000000000000000000000000000000005f82015250565b5f61071a601083610606565b9150610725826106e6565b602082019050919050565b5f6020820190508181035f8301526107478161070e565b9050919050565b5f6040820190506107615f83018561046c565b61076e60208301846104f6565b939250505056fea26469706673582212206dedfaf1e789a97377d84d4830597d244033b88d040a233aacc84eafa724c51b64736f6c634300081c0033";

  
      type AutoPriceFeedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: AutoPriceFeedConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class AutoPriceFeed__factory extends ContractFactory {
    
      constructor(...args: AutoPriceFeedConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<AutoPriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): AutoPriceFeed__factory {
      return super.connect(runner) as AutoPriceFeed__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): AutoPriceFeedInterface {
      return new Interface(_abi) as AutoPriceFeedInterface;
    }
    
    override attach(address: string | Addressable): AutoPriceFeed {
      return super.attach(address) as AutoPriceFeed;
    }
  static connect(address: string, runner?: ContractRunner | null): AutoPriceFeed {
      return new Contract(address, _abi, runner) as unknown as AutoPriceFeed;
    }
  }

  
  