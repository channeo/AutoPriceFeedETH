/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IAutoPriceFeed, IAutoPriceFeedInterface } from "../../IAutoPriceFeed.sol/IAutoPriceFeed.js";

  const _abi = [
  {
    "inputs": [],
    "name": "ethPrice",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getETHPrice",
    "outputs": [
      {
        "internalType": "int256",
        "name": "",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "isDataFresh",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "lastUpdate",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "int256",
        "name": "_newPrice",
        "type": "int256"
      }
    ],
    "name": "updateETHPrice",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  export class IAutoPriceFeed__factory {
    static readonly abi = _abi;
    static createInterface(): IAutoPriceFeedInterface {
      return new Interface(_abi) as IAutoPriceFeedInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IAutoPriceFeed {
      return new Contract(address, _abi, runner) as unknown as IAutoPriceFeed;
    }
  }
  