/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { BackupFeed, BackupFeedInterface } from "../../Backup.sol/BackupFeed.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_mainFeed",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "int256",
        "name": "price",
        "type": "int256"
      }
    ],
    "name": "BackupUpdate",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "int256",
        "name": "_price",
        "type": "int256"
      }
    ],
    "name": "emergencyUpdate",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "mainFeed",
    "outputs": [
      {
        "internalType": "contract IAutoPriceFeed",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "updateFromChainlink",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051610a97380380610a9783398181016040528101906100319190610168565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073694aa1769357215de4fac081bf1f309adc32530660025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610193565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101378261010e565b9050919050565b6101478161012d565b8114610151575f5ffd5b50565b5f815190506101628161013e565b92915050565b5f6020828403121561017d5761017c61010a565b5b5f61018a84828501610154565b91505092915050565b6108f7806101a05f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80631b526efd1461004e5780631e6ee28a1461006c5780638da5cb5b14610076578063b05f9cc914610094575b5f5ffd5b6100566100b0565b6040516100639190610538565b60405180910390f35b6100746100d4565b005b61007e61033f565b60405161008b9190610571565b60405180910390f35b6100ae60048036038101906100a991906105c1565b610364565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015a90610646565b60405180910390fd5b5f5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156101cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f391906106ea565b509350509250505f811161023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610233906107ab565b60405180910390fd5b5f821361027e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027590610813565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c64d5ec2836040518263ffffffff1660e01b81526004016102d79190610840565b5f604051808303815f87803b1580156102ee575f5ffd5b505af1158015610300573d5f5f3e3d5ffd5b505050507fe5e1abb62c1df86703c719246a80c1dba96de102c1e5b676d530868adbd1ea4b826040516103339190610840565b60405180910390a15050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90610646565b60405180910390fd5b5f8113610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c906108a3565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c64d5ec2826040518263ffffffff1660e01b815260040161048e9190610840565b5f604051808303815f87803b1580156104a5575f5ffd5b505af11580156104b7573d5f5f3e3d5ffd5b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6105006104fb6104f6846104be565b6104dd565b6104be565b9050919050565b5f610511826104e6565b9050919050565b5f61052282610507565b9050919050565b61053281610518565b82525050565b5f60208201905061054b5f830184610529565b92915050565b5f61055b826104be565b9050919050565b61056b81610551565b82525050565b5f6020820190506105845f830184610562565b92915050565b5f5ffd5b5f819050919050565b6105a08161058e565b81146105aa575f5ffd5b50565b5f813590506105bb81610597565b92915050565b5f602082840312156105d6576105d561058a565b5b5f6105e3848285016105ad565b91505092915050565b5f82825260208201905092915050565b7f436869206f776e657200000000000000000000000000000000000000000000005f82015250565b5f6106306009836105ec565b915061063b826105fc565b602082019050919050565b5f6020820190508181035f83015261065d81610624565b9050919050565b5f69ffffffffffffffffffff82169050919050565b61068281610664565b811461068c575f5ffd5b50565b5f8151905061069d81610679565b92915050565b5f815190506106b181610597565b92915050565b5f819050919050565b6106c9816106b7565b81146106d3575f5ffd5b50565b5f815190506106e4816106c0565b92915050565b5f5f5f5f5f60a086880312156107035761070261058a565b5b5f6107108882890161068f565b9550506020610721888289016106a3565b9450506040610732888289016106d6565b9350506060610743888289016106d6565b92505060806107548882890161068f565b9150509295509295909350565b7f4475206c69657520436861696e6c696e6b2063750000000000000000000000005f82015250565b5f6107956014836105ec565b91506107a082610761565b602082019050919050565b5f6020820190508181035f8301526107c281610789565b9050919050565b7f47696120436861696e6c696e6b207361690000000000000000000000000000005f82015250565b5f6107fd6011836105ec565b9150610808826107c9565b602082019050919050565b5f6020820190508181035f83015261082a816107f1565b9050919050565b61083a8161058e565b82525050565b5f6020820190506108535f830184610831565b92915050565b7f47696120736169000000000000000000000000000000000000000000000000005f82015250565b5f61088d6007836105ec565b915061089882610859565b602082019050919050565b5f6020820190508181035f8301526108ba81610881565b905091905056fea264697066735822122047714fd79e9fa97a614446561ef7dd0c1ca09047a7cda5dc8ce559a959e2213064736f6c634300081c0033";

  
      type BackupFeedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: BackupFeedConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class BackupFeed__factory extends ContractFactory {
    
      constructor(...args: BackupFeedConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_mainFeed: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_mainFeed, overrides || {});
    };
    override deploy(_mainFeed: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_mainFeed, overrides || {}) as Promise<BackupFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): BackupFeed__factory {
      return super.connect(runner) as BackupFeed__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): BackupFeedInterface {
      return new Interface(_abi) as BackupFeedInterface;
    }
    
    override attach(address: string | Addressable): BackupFeed {
      return super.attach(address) as BackupFeed;
    }
  static connect(address: string, runner?: ContractRunner | null): BackupFeed {
      return new Contract(address, _abi, runner) as unknown as BackupFeed;
    }
  }

  
  